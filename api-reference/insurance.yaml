openapi: 3.0.0
info:
  title: Way Insurance Apis
  description: Way Insurance Apis
  version: 1.0.0-oas3
servers:
  - url: https://sandbox.way.com
    description: Sandbox server
  - url: https://www.way.com
    description: Production server
tags:
  - name: developers
    description: Operations available to regular developer
paths:
  /way-insurance/v1/public/vendor/quoteRequest:
    post:
      tags:
        - developers
      description: Use this endpoint to create a new quote request in the system. This will initiate a new rate request with carriers. The transactionId returned by this can be used with the Quote Request Results endpoint to see the carrier responses, with premiums.
      operationId: saveQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        200:
          description: Save quote Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveQuoteSuccess'
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveQuoteErrorResponse'
          description: Bad request
      security:
        - basicAuth: []
  /way-insurance/v1/public/vendor/quoteRequest/{transactionId}/results:
    get:
      tags:
        - developers
      description: Provide the transactionId of the quote request (obtained from Create Quote Request call) to see if results have been received for this quote request. It may take up to 20 seconds, in some cases, to get back all of the results, so it may be necessary to poll this endpoint over an interval.
      operationId: getQuoteResults
      parameters:
        - name: transactionId
          in: path
          description: transactionId to get quote results
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: list of insurance quotes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
      security:
        - basicAuth: []

  /way-insurance/v1/public/vehicle/years:
    get:
      tags:
        - developers
      description: API to get years for the vehicle
      operationId: getYears
      responses:
        200:
          description: list of vehicle years
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YearResponse'

  /way-insurance/v1/public/vehicle/{year}:
    get:
      tags:
        - developers
      description: API to get makes for an year
      operationId: getMakes
      parameters:
        - name: year
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        200:
          description: list of vehicle years
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakesResponse'

  /way-insurance/v1/public/vehicle/{year}/{make}:
    get:
      tags:
        - developers
      description: API to get makes for a model in certain year
      operationId: getModels
      parameters:
        - name: year
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: make
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: list of models for a make in an year
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResponse'


components:
  schemas:
    QuoteRequest:
      required:
        - email
        - firstName
        - lastName
        - phoneNumber
        - driverLicenseNumber
        - dateOfBirth
        - maritalStatus
        - address
        - vehicles
      type: object
      properties:
        firstName:
          type: string
          example: Test
        lastName:
          type: string
          example: Way
        email:
          type: string
          example: "test@way.com"
        phoneNumber:
          type: string
          example: "+1 1234567899"
        driverLicenseNumber:
          type: string
          example: "E186****"
        dateOfBirth:
          type: string
          format: "yyyy-MM-dd"
          example: "1980-05-11"
        gender:
          type: string
          enum: [M, F]
          example: F
          description: Providing gender can help us get accurate rates
        maritalStatus:
          type: string
          enum: [M, S]
          example: S
        address:
          type: object
          properties:
            addressLine1:
              type: string
              example: 47627 Lakeview Blvd
            addressLine2:
              type: string
              example:
            city:
              type: string
              example: Fremont
            state:
              type: string
              example: CA
            postalCode:
              type: string
              example: 94538
            county:
              type: string
              example: Alameda
          required:
            - addressLine1
            - city
            - state
            - postalCode
        vehicles:
          type: array
          items:
            $ref: "#/components/schemas/vehicle"
        additionalDrivers:
          type: array
          items:
            $ref: "#/components/schemas/driver"
        ownHome:
          type: string
          enum: [Yes, No]
          example: Yes
        student:
          type: boolean
          enum: [true, false]
          example: true
        industry:
          type: string
          enum:
            [
                01(Homemaker(full-time)),
                02(Retired(full-time)),
                03(Unemployed),
                04(Student(full-time)),
                AA(Agriculture/Forestry/Fishing),
                AB(Art/Design/Media),
                AC(Banking/Finance/Real Estate),
                AD(Business/Sales/Office),
                AE(Construction/Energy/Mining),
                AF(Education/Library),
                AG(Engineer/Architect/Science/Math),
                AH(Food Service/Hotel Services),
                AJ(Government/Military),
                AK(Information Technology),
                AL(Insurance),
                AM(Legal/Law Enforcement/Security),
                AN(Medical/Social Services/Religion),
                AP(Personal Care/Service),
                AQ(Production/Manufacturing),
                AR(Repair/Maintenance/Grounds),
                AS(Sports/Recreation),
                AT(Travel/Transportation/Storage),
            ]
          example: AG
        education:
          type: string
          enum:
            [
                Bachelors Degree,
                Masters Degree,
                Ph. D/Doctorate,
                Medical Degree,
                Law Degree,
                No High School Diploma,
                High School Diploma,
                Associates Degree,
                Some College - No Degree,
                Vocational/Technical Degree,
            ]
          example: Bachelors Degree
        movingViolations:
          type: string
          enum: [Yes, No]
        atFaultAccidents:
          type: string
          enum: [Yes,No]
        currentlyInsured:
          type: string
          enum: [Yes,No]
        webhookURL:
          type: string
          description: <pushback URL to be provided by partner to which policy document details will be sent>

    address:
      type: object
      properties:
        addressLine1:
          type: string
          example: 47627 Lakeview Blvd
        addressLine2:
          type: string
          example:
        city:
          type: string
          example: Fremont
        state:
          type: string
          example: CA
        postalCode:
          type: string
          example: 94538
        county:
          type: string
          example: Alameda
      required:
        - addressLine1
        - city
        - state
        - postalCode
    vehicle:
      type: object
      properties:
        year:
          type: string
          example: 2019
        make:
          type: string
          example: HYUNDAI
        model:
          type: string
          example: ACCENT SE
        vin:
          type: string
          example: 3KPC24***********
        annualMileage:
          type: string
          example: 8000
      required:
        - make
        - model
        - year
    driver:
      type: object
      properties:
        firstName:
          type: string
          example: Test1
        lastName:
          type: string
          example: way
        driverLicenseNumber:
          type: string
          example: E18****
        dateOfBirth:
          type: string
          format: "yyyy-MM-dd"
          example: "1982-05-11"
        gender:
          type: string
          enum: [M, F]
          example: M
        maritalStatus:
          type: string
          enum: [M, S]
          example: S
        relation:
          type: string
          enum: [S(spouse), C(child), R(relative), N(non relative), P(parent)]
          example: R
    SaveQuoteSuccess:
      type: object
      properties:
        apiStatus:
          type: string
          example: Success
        message:
          type: string
          example: User signed up successfully
        transactionId:
          type: string
          example: 701dbe44-5a07-41ea-aa8d-845719acdc01
    SaveQuoteErrorResponse:
      type: object
      properties:
        apiStatus:
          type: string
          example: Failure
        message:
          type: string
          example: Bad Request
        errorMap:
          type: object
          additionalProperties:
            type: string
          example:
            WAY_IN_1: Email id cannot be null
            WAY_IN_2: First name cannot be null
            WAY_IN_3: Last name cannot be null
            WAY_IN_4: Phone number cannot be null
            WAY_IN_21: Driving license number cannot be null
            WAY_IN_9: Date of birth cannot be null
            WAY_IN_22: Gender cannot be null
            WAY_IN_23: Marital status cannot be null
            WAY_IN_24: Address cannot be null
            WAY_IN_10: Vehicle details cannot be null
            WAY_IN_11: Vehicle year cannot be null
            WAY_IN_12: Vehicle make cannot be null
            WAY_IN_13: Vehicle model cannot be null
            WAY_IN_34: Vehicle vin cannot be null

        errorCode:
          type: string
          example: WAY_022
    QuoteResponse:
      type: object
      properties:
        apiStatus:
          type: string
          example: success
        message:
          type: string
          example: Successfully fetched quote request
        quotes:
          type: array
          items:
            $ref: "#/components/schemas/Quote"
    Quote:
      type: object
      properties:
        companyId:
          type: string
          example: 8917191
        companyName:
          type: string
          example: BridgerAuto
        numOfCars:
          type: integer
          example: 1
        numOfDrivers:
          type: integer
          example: 2
        logoPath:
          type: string
          example: https://www.itcratingservices.com/webservices/imp/api/companies/au/8917191/logo/color_200x200.png
        paymentAmount:
          type: object
          example: 61.12
        averageRating:
          type: object
          example: 4.2
        totalReviews:
          type: integer
          example: 2300
        totalPremium:
          type: object
          example: 532.00
        term:
          type: integer
          example: 6
        onlineBinding:
          type: boolean
          example: false
        agentNumber:
          type: string
          example: +1 (408) 637-5330

    YearResponse:
      type: object
      properties:
        apiStatus:
          type: string
          example: success
        message:
          type: string
          example: Successfully fetched quote request
        years:
          type: array
          items:
            type: string
          example: [ "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024"]

    MakesResponse:
      type: object
      properties:
        apiStatus:
          type: string
          example: success
        message:
          type: string
          example: Successfully fetched the makes
        makes:
          type: array
          items:
            type: string
          example: ["ACURA", "ALFA ROMEO", "ASTON MARTIN", "AUDI", "AUTOMOBILI PININFARINA", "BENTLEY", "BMW", "BRIGHTDROP", "BUGATTI", "BUICK", "CADILLAC", "CHEVROLET", "CHRYSLER", "CRUISE", "DODGE", "FERRARI", "FIAT", "FISKER", "FORD", "GENESIS", "GMC", "HONDA", "HYUNDAI", "INFINITI", "JAGUAR", "JEEP", "KIA", "LAMBORGHINI", "LAND ROVER", "LEXUS", "LINCOLN", "LORDSTOWN", "LUCID MOTORS", "MASERATI", "MAZDA", "MCLAREN", "MERCEDES BENZ", "MINI", "MITSUBISHI", "NISSAN", "POLESTAR", "PORSCHE", "RAM", "RIVIAN", "ROLLS ROYCE", "SUBARU", "TESLA", "TOYOTA", "VINFAST", "VOLKSWAGEN", "VOLVO"]


    ModelResponse:
      type: object
      properties:
        apiStatus:
          type: string
          example: success
        message:
          type: string
          example: Successfully fetched models
        models:
          type: array
          items:
            type: string
          example: ["4RUNNER LIMITED", "4RUNNER PREMI", "4RUNNER SE", "4RUNNER SR5", "4RUNNER T", "4RUNNER TRD OFF ROAD", "4RUNNER TRD PRO", "4RUNNER TRD SPORT", "BZ4X LIMITED", "BZ4X XLE", "CAMRY LE", "CAMRY SE", "CAMRY SE NIGHT SHADE", "CAMRY TRD", "CAMRY XLE", "CAMRY XSE", "COROLLA CROSS L", "COROLLA CROSS LE", "COROLLA CROSS S", "COROLLA CROSS SE", "COROLLA CROSS XLE", "COROLLA CROSS XSE", "COROLLA LE", "COROLLA SE", "COROLLA XLE"]

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic